# This is a basic workflow to help you get started with Actions

name: CI-CD-pipeline-for-java-app

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots verify
     # - run: mkdir staging && cp target/*.jar staging
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.dockerhub_username }}
          password: ${{ secrets.dockerhub_password }}
          
      - name: Build & Push Image
        id: build-image
      #  env:
      #              DOCKER_BUILDKIT: 1
        run: |
                    docker build -t achinoam84/test:$GITHUB_REF_NAME.
                    docker push achinoam84/test:$GITHUB_REF_NAME
                    echo "::set-output name=image::$achinoam84/test:GITHUB_REF_NAME"

      
     # - uses: actions/upload-artifact@v2
      #  with:
       #   name: Package
        #  path: staging
   
      #- name: Upload image
      #  uses: ishworkh/docker-image-artifact-upload@v1
       # with:
        #  image: "achinoam84/test:github"
          
      
